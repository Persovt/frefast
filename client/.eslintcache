[{"/Users/ilamitin/Documents/project/twitter/client/src/reportWebVitals.ts":"1","/Users/ilamitin/Documents/project/twitter/client/src/App.tsx":"2","/Users/ilamitin/Documents/project/twitter/client/src/index.tsx":"3","/Users/ilamitin/Documents/project/site213/frefast/client/src/index.tsx":"4","/Users/ilamitin/Documents/project/site213/frefast/client/src/App.tsx":"5","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/auth.reducer.ts":"6","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/saga.ts":"7","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Main.tsx":"8","/Users/ilamitin/Documents/project/site213/frefast/client/src/reportWebVitals.ts":"9","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/MainPage.tsx":"10","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/NavBar.tsx":"11","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/Profile.tsx":"12","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/Store.tsx":"13","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/Admin.tsx":"14"},{"size":425,"mtime":1609691145584,"results":"15","hashOfConfig":"16"},{"size":469,"mtime":1609958259670,"results":"17","hashOfConfig":"16"},{"size":576,"mtime":1609957780457,"results":"18","hashOfConfig":"16"},{"size":576,"mtime":1611410765549,"results":"19","hashOfConfig":"20"},{"size":2828,"mtime":1611508475181,"results":"21","hashOfConfig":"20"},{"size":1110,"mtime":1611481968160,"results":"22","hashOfConfig":"20"},{"size":3443,"mtime":1611644258693,"results":"23","hashOfConfig":"20"},{"size":316,"mtime":1611435744550,"results":"24","hashOfConfig":"20"},{"size":425,"mtime":1611410765550,"results":"25","hashOfConfig":"20"},{"size":599,"mtime":1611500458115,"results":"26","hashOfConfig":"20"},{"size":4162,"mtime":1611508423430,"results":"27","hashOfConfig":"20"},{"size":642,"mtime":1611503595871,"results":"28","hashOfConfig":"20"},{"size":871,"mtime":1611501767615,"results":"29","hashOfConfig":"20"},{"size":2036,"mtime":1611510736284,"results":"30","hashOfConfig":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18150uq",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1qh5j0a",{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"/Users/ilamitin/Documents/project/twitter/client/src/reportWebVitals.ts",[],"/Users/ilamitin/Documents/project/twitter/client/src/App.tsx",["66"],"/Users/ilamitin/Documents/project/twitter/client/src/index.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/index.tsx",[],["67","68"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/App.tsx",["69","70","71","72","73"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/state/auth.reducer.ts",[],["74","75"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/saga.ts",["76","77","78"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Main.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/reportWebVitals.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/MainPage.tsx",["79"],"import React from 'react';\nimport { connect } from 'react-redux'\nimport { inputReducer, AuthFetchServerAC, RegFetchServerAC } from '../state/auth.reducer'\nimport NavBar from './AuthPage/NavBar'\n\n\n\n\nconst MainPage = (props: any) => {\n   \n\n    return(\n         <>\n         Main\n         </>\n    )\n}\nconst mapStateToProps = (state: any) => {\n    return {\n        loggin: state.loggin,\n        email: state.currectInput.email,\n        password: state.currectInput.password\n\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    AuthFetchServerAC,\n    RegFetchServerAC,\n    inputReducer,\n\n\n})(MainPage)",["80","81"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/NavBar.tsx",["82","83","84"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { Menu } from 'antd';\nimport { ContactsOutlined, ShopOutlined, HomeOutlined } from '@ant-design/icons';\nimport { Modal, Drawer,Space, Input,Button } from 'antd';\nimport { inputReducer, AuthFetchServerAC, RegFetchServerAC } from '../../state/auth.reducer'\nimport { EyeTwoTone, EyeInvisibleOutlined } from '@ant-design/icons';\nimport {CgProfile} from 'react-icons/cg'\nimport { BsPeople } from 'react-icons/bs';\nimport {Link} from 'react-router-dom'\nimport {RiAdminLine} from 'react-icons/ri'\n\nclass NavBar extends React.Component <any,any> {\n    constructor(props: any){\n        super(props)\n    }\n  state = {\n    current: 'main',\n    setVisible: false\n  };\n\n   changeHandler = (event: any) => {\n    return { value: event.target.value, name: event.target.name }\n}\n  handleClick = (e: any) => {\n    console.log('click ', e);\n    this.setState({ current: e.key });\n  };\n\n    showDrawer = () => {\n        this.setState({setVisible: true});\n    };\n    onClose = () => {\n        this.setState({setVisible: false});\n    };\n\n  render() {\n    const { current } = this.state;\n    let AuthButton\n    let AdminButton\n    \n    if(!this.props.loggin){\n\n        AuthButton =  <Menu.Item key=\"Auth\" onClick={this.showDrawer} icon={<BsPeople />} style={{flexGrow: 1, textAlign: 'center'}}>\n        Auth\n       </Menu.Item>\n    }else{\n        if(this.props.role == 'user')\n        AdminButton = <Menu.Item key=\"Admin\"  icon={<RiAdminLine />} style={{flexGrow: 1, textAlign: 'center'}}>\n        <Link to=\"/admin\">Admin</Link>\n       </Menu.Item>\n\n        AuthButton =  <Menu.Item key=\"Profile\"  icon={<CgProfile />} style={{flexGrow: 1, textAlign: 'center'}}>\n        <Link to=\"/profile\">Profile</Link>\n       </Menu.Item>\n    }\n    return (<>\n      <Menu onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{justifyContent:'space-between', display: 'flex',}}>\n        <Menu.Item key=\"main\" icon={<HomeOutlined />} style={{flexGrow: 1, textAlign: 'center'}}>\n        <Link to=\"/\">Main</Link>\n        </Menu.Item>\n        <Menu.Item key=\"contact\" icon={<ContactsOutlined />} style={{flexGrow: 1, textAlign: 'center'}}>\n        <Link to=\"/contact\">Contact</Link>\n        </Menu.Item>\n        <Menu.Item key=\"Store\" icon={<ShopOutlined />} style={{flexGrow: 1, textAlign: 'center'}}>\n            <Link to=\"/store\">Store</Link>\n\n        </Menu.Item>\n        {AuthButton}\n        {AdminButton}\n      </Menu>\n\n      <Drawer\n                    title=\"Authoriz\"\n                    placement=\"right\"\n                    closable={false}\n                    onClose={this.onClose}\n                    visible={this.state.setVisible}\n                >\n                    <Space direction=\"vertical\"  >\n\n                        <Input placeholder=\"input email\"\n                            name='email'\n                            onChange={(e: any) => this.props.inputReducer(this.changeHandler(e))} />\n\n                        <Input.Password\n                            placeholder=\"input password\"\n                            name='password'\n                            onChange={(e: any) => this.props.inputReducer(this.changeHandler(e))}\n                            iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                        />\n                        <Space direction=\"horizontal\"  >\n                            <Button onClick={() => this.props.AuthFetchServerAC({ email: this.props.email, password: this.props.password })}>Auth me!</Button>\n                            <Button onClick={() => this.props.RegFetchServerAC({ email: this.props.email, password: this.props.password })}>Reg me!</Button>\n                        </Space>\n                    </Space>\n                </Drawer>\n   </> );\n  }\n}\n\n\nconst mapStateToProps = (state: any) => {\n    return{\n        role: state.data.role,\n        loggin: state.loggin,\n        email: state.currectInput.email,\n        password: state.currectInput.password\n    }\n  }\n  \n  \n  export default connect(mapStateToProps, {\n    AuthFetchServerAC,\n    RegFetchServerAC,\n    inputReducer,\n    \n  })(NavBar)","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/Profile.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/Store.tsx",["85","86","87","88"],"import React from 'react'\nimport {connect} from 'react-redux'\nimport { Card, Avatar ,Button} from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nconst { Meta } = Card;\nclass Store extends React.Component <any,any> {\n\n    render(){\n        return(\n            <>\n           \n\n            <Card\n           \n             hoverable\n    style={{ width: 300, margin: \"20px\" }}\n    cover={\n      <img\n        alt=\"example\"\n        src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n      />\n    }\n    actions={[\n        <Button>Add cart</Button>\n    ]}\n  >\n    <Meta\n      description=\"This is the description\"\n    />\n  </Card>\n   \n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return{\n       \n    }\n  }\n  \n  \n  export default connect(mapStateToProps, {\n   \n    \n  })(Store)","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/AuthPage/Admin.tsx",["89"],"import React from 'react'\nimport { connect } from 'react-redux'\n//import \"./profile.css\"\nimport { List, message, Avatar, Spin } from 'antd';\nimport { Container } from 'react-bootstrap';\n\n\nclass Admin extends React.Component<any, any> {\n    // handleInfiniteOnLoad: any\n\n    handleInfiniteOnLoad = () => {\n        let { data } = this.state;\n        this.setState({\n            loading: true,\n        });\n        if (data.length > 14) {\n            message.warning('Infinite List loaded all');\n            this.setState({\n                hasMore: false,\n                loading: false,\n            });\n            return;\n        }\n    }\n\n    render() {\n        let data = [\n            { name: 'hi' },\n            { name: 'hi2' }\n        ]\n        return (\n            <>\n                <Container>\n\n                    <div className=\"demo-infinite-container\">\n                        <h4>Заказы:</h4>\n                        <List\n                            dataSource={data}\n                            renderItem={(item: any) => (\n                                <List.Item key={item.id}>\n                                    <List.Item.Meta\n                                        avatar={\n                                            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                                        }\n                                        title={<a href=\"https://ant.design\">{item.name}</a>}\n                                        //description={item.name}\n                                    />\n                                   <div className=\"\">{item.name}</div>\n                                </List.Item>\n                            )}\n                        >\n                            \n                        </List>\n\n                    </div>\n                </Container>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        data: state.data\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n\n\n})(Admin)",{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":12},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"99","line":3,"column":37,"nodeType":"92","messageId":"93","endLine":3,"endColumn":46},{"ruleId":"100","severity":1,"message":"101","line":17,"column":3,"nodeType":"102","messageId":"103","endLine":19,"endColumn":4},{"ruleId":"104","severity":1,"message":"105","line":41,"column":24,"nodeType":"106","messageId":"107","endLine":41,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":63,"column":31,"nodeType":"106","messageId":"107","endLine":63,"endColumn":33},{"ruleId":"94","replacedBy":"108"},{"ruleId":"96","replacedBy":"109"},{"ruleId":"90","severity":1,"message":"110","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":16},{"ruleId":"90","severity":1,"message":"111","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"112","line":2,"column":32,"nodeType":"92","messageId":"93","endLine":2,"endColumn":42},{"ruleId":"90","severity":1,"message":"113","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":14},{"ruleId":"94","replacedBy":"114"},{"ruleId":"96","replacedBy":"115"},{"ruleId":"90","severity":1,"message":"116","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":14,"column":5,"nodeType":"102","messageId":"103","endLine":16,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":48,"column":28,"nodeType":"106","messageId":"107","endLine":48,"endColumn":30},{"ruleId":"90","severity":1,"message":"117","line":3,"column":16,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"118","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":22},{"ruleId":"90","severity":1,"message":"119","line":4,"column":24,"nodeType":"92","messageId":"93","endLine":4,"endColumn":40},{"ruleId":"90","severity":1,"message":"120","line":4,"column":42,"nodeType":"92","messageId":"93","endLine":4,"endColumn":57},{"ruleId":"90","severity":1,"message":"121","line":4,"column":33,"nodeType":"92","messageId":"93","endLine":4,"endColumn":37},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'useEffect' is defined but never used.","'setDataAC' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["122"],["123"],"'strict' is defined but never used.","'call' is defined but never used.","'takeLatest' is defined but never used.","'NavBar' is defined but never used.",["122"],["123"],"'Modal' is defined but never used.","'Avatar' is defined but never used.","'EditOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'Spin' is defined but never used.","no-global-assign","no-unsafe-negation"]