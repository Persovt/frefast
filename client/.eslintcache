[{"/Users/ilamitin/Documents/project/twitter/client/src/reportWebVitals.ts":"1","/Users/ilamitin/Documents/project/twitter/client/src/App.tsx":"2","/Users/ilamitin/Documents/project/twitter/client/src/index.tsx":"3","/Users/ilamitin/Documents/project/site213/frefast/client/src/index.tsx":"4","/Users/ilamitin/Documents/project/site213/frefast/client/src/App.tsx":"5","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/auth.reducer.ts":"6","/Users/ilamitin/Documents/project/site213/frefast/client/src/reportWebVitals.ts":"7","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/state.ts":"8","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/auth.saga.ts":"9","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/store.saga.ts":"10","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Cart.page.tsx":"11","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Main.page.tsx":"12","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store.page.tsx":"13","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/index.page.ts":"14","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Profile.page.tsx":"15","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Admin.page.tsx":"16","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/NavBar.page.tsx":"17","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/index.saga.ts":"18"},{"size":425,"mtime":1609691145584,"results":"19","hashOfConfig":"20"},{"size":469,"mtime":1609958259670,"results":"21","hashOfConfig":"20"},{"size":576,"mtime":1609957780457,"results":"22","hashOfConfig":"20"},{"size":574,"mtime":1611816497591,"results":"23","hashOfConfig":"24"},{"size":2578,"mtime":1611829621804,"results":"25","hashOfConfig":"24"},{"size":1561,"mtime":1611829066317,"results":"26","hashOfConfig":"24"},{"size":425,"mtime":1611410765550,"results":"27","hashOfConfig":"24"},{"size":374,"mtime":1611828404174,"results":"28","hashOfConfig":"24"},{"size":1850,"mtime":1611816443900,"results":"29","hashOfConfig":"24"},{"size":1161,"mtime":1611829110794,"results":"30","hashOfConfig":"24"},{"size":1312,"mtime":1611832590304,"results":"31","hashOfConfig":"24"},{"size":317,"mtime":1611829220942,"results":"32","hashOfConfig":"24"},{"size":8642,"mtime":1611837741322,"results":"33","hashOfConfig":"24"},{"size":251,"mtime":1611828406574,"results":"34","hashOfConfig":"24"},{"size":1177,"mtime":1611830085193,"results":"35","hashOfConfig":"24"},{"size":1479,"mtime":1611829238093,"results":"36","hashOfConfig":"24"},{"size":4762,"mtime":1611829137369,"results":"37","hashOfConfig":"24"},{"size":804,"mtime":1611829115861,"results":"38","hashOfConfig":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18150uq",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qh5j0a",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilamitin/Documents/project/twitter/client/src/reportWebVitals.ts",[],"/Users/ilamitin/Documents/project/twitter/client/src/App.tsx",["79"],"/Users/ilamitin/Documents/project/twitter/client/src/index.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/index.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/App.tsx",["80"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ValidateTokenFetchServerAC } from \"./state/auth.reducer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Main, Cart, Store, Profile, NavBar, Admin } from \"./pages/index.page\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\n\nclass App extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.ValidateTokenFetchServerAC();\n  }\n\n  componentDidUpdate() {\n    if (this.props.accesToken)\n    \n      setInterval(() => {\n        this.props.ValidateTokenFetchServerAC();\n      }, 100000);\n  }\n\n  render() {\n    let router; //Лучше уйди и не трогай нахуй обьет\n    switch (this.props.role) {\n      case \"admin\":\n        router = (\n          <Switch>\n            <Route path=\"/\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/cart\" exact>\n              <Cart />\n            </Route>\n            <Route path=\"/store\" exact>\n              <Store />\n            </Route>\n            <Route path=\"/profile\" exact>\n              <Profile />\n            </Route>\n\n            <Redirect to=\"/\" />\n          </Switch>\n        );\n        break;\n      case \"user\":\n        router = (\n          <Switch>\n            <Route path=\"/\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/cart\" exact>\n              <Cart />\n            </Route>\n            <Route path=\"/store\" exact>\n              <Store />\n            </Route>\n            <Route path=\"/profile\" exact>\n              <Profile />\n            </Route>\n            <Route path=\"/admin\" exact>\n              <Admin />\n            </Route>\n\n            <Redirect to=\"/\" />\n          </Switch>\n        );\n        break;\n\n      default:\n        router = (\n          <Switch>\n            <Route path=\"/\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/cart\" exact>\n              <Cart />\n            </Route>\n            <Route path=\"/store\" exact>\n              <Store />\n            </Route>\n\n            <Redirect to=\"/\" />\n          </Switch>\n        );\n    }\n\n    return (\n      <>\n        <Router>\n          <NavBar />\n          {router}\n        </Router>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    role: state.data.role,\n    loggin: state.loggin\n  };\n};\n\nexport default connect(mapStateToProps, {\n  ValidateTokenFetchServerAC,\n})(App);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/auth.reducer.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/reportWebVitals.ts",[],["81","82"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/state/state.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/auth.saga.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/store.saga.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Cart.page.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Main.page.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store.page.tsx",["83","84","85","86"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Input } from \"antd\";\nimport { BsPlusCircle } from \"react-icons/bs\";\nimport {\n  SettingOutlined,\n  UploadOutlined,\n  ShoppingCartOutlined,\n} from \"@ant-design/icons\";\nimport { Modal } from \"antd\";\nimport {\n  inputReducer,\n  AddNewProductServerAC,\n  SetProductsFetchServerAC,\n  DeleteProductsFetchServerAC,\n  RedactProductsFetchServerAC,\n} from \"../state/auth.reducer\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Row, Col } from \"antd\";\nimport { Container } from \"react-bootstrap\";\nconst { Meta } = Card;\n\nclass Store extends React.Component<any, any> {\n  componentDidMount() {\n    this.props.SetProductsFetchServerAC();\n  }\n\n  changeHandler = (event: any) => {\n    return { value: event.target.value, name: event.target.name };\n  };\n\n  showModal = () => {\n    console.log(\"show\");\n    this.setState({ isModalVisibleCreateProduct: true });\n  };\n\n  handleOkCreateProduct = () => {\n    this.props.AddNewProductServerAC({\n      imageUrl: this.props.imageUrl,\n      nameProduct: this.props.nameProduct,\n      descriprionProduct: this.props.descriprionProduct,\n    });\n    this.setState({ isModalVisibleCreateProduct: false });\n  };\n  handleDeleteRedactProduct = () => {\n    console.log(this.state.currectId);\n    this.props.DeleteProductsFetchServerAC({\n      currectId: this.state.currectId,\n    });\n    this.setState({ isModalVisibleRedactProduct: false });\n  };\n\n  handleRedactProduct = () => {\n    this.props.RedactProductsFetchServerAC({\n      imageUrl: this.props.imageUrl,\n      nameProduct: this.props.nameProduct,\n      descriprionProduct: this.props.descriprionProduct,\n      id: this.state.currectId,\n    });\n\n    this.setState({ isModalVisibleRedactProduct: false });\n  };\n\n  handleCancel = () => {\n    this.setState({ isModalVisible: false });\n  };\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    loading: false,\n    imageUrl: \"\",\n    isModalVisibleCreateProduct: false,\n    isModalVisibleRedactProduct: false,\n    currectId: \"\",\n  };\n\n  getBase64(img: any, callback: any) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n  handleChange = (info: any) => {\n    console.log(info);\n    this.getBase64(info.file.originFileObj, (imageUrl: any) => {\n      this.props.inputReducer({ value: imageUrl, name: \"imageUrl\" });\n    });\n  };\n\n  beforeUpload(file: any) {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"Only upload JPG or PNG files!\");\n      return false;\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image size must be less than 2MB!\");\n      return false;\n    }\n    return isJpgOrPng && isLt2M;\n  }\n  render() {\n    const uploadButton = (\n      <div>\n        {this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n    return (\n      <>\n        <Modal\n          title=\"Create new product\"\n          visible={this.state.isModalVisibleCreateProduct}\n          onOk={this.handleOkCreateProduct}\n          onCancel={() => this.setState({ isModalVisibleCreateProduct: false })}\n        >\n          <Input\n            placeholder=\"name product\"\n            name=\"nameProduct\"\n            onChange={(e: any) =>\n              this.props.inputReducer(this.changeHandler(e))\n            }\n          />\n\n          <Input\n            placeholder=\"description product\"\n            name=\"descriprionProduct\"\n            onChange={(e: any) =>\n              this.props.inputReducer(this.changeHandler(e))\n            }\n          />\n\n          <Upload\n            onChange={this.handleChange}\n            showUploadList={false}\n            beforeUpload={this.beforeUpload}\n          >\n            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n          </Upload>\n          <img src={this.state.imageUrl} style={{ width: 300, height: 300 }} />\n        </Modal>\n        <Modal\n          title=\"Redact product\"\n          visible={this.state.isModalVisibleRedactProduct}\n          footer={\n            <>\n              <Button danger onClick={this.handleDeleteRedactProduct}>\n                DELE VSE NAXY\n              </Button>\n              <Button type=\"primary\" onClick={this.handleRedactProduct}>\n                Ok\n              </Button>\n              <Button\n                onClick={() =>\n                  this.setState({ isModalVisibleRedactProduct: false })\n                }\n              >\n                Canel\n              </Button>\n            </>\n          }\n        >\n          <Input\n            placeholder=\"name product\"\n            name=\"nameProduct\"\n            onChange={(e: any) =>\n              this.props.inputReducer(this.changeHandler(e))\n            }\n          />\n\n          <Input\n            placeholder=\"description product\"\n            name=\"descriprionProduct\"\n            onChange={(e: any) =>\n              this.props.inputReducer(this.changeHandler(e))\n            }\n          />\n\n          <Upload\n            onChange={this.handleChange}\n            showUploadList={false}\n            beforeUpload={this.beforeUpload}\n          >\n            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n          </Upload>\n          <img src={this.state.imageUrl} style={{ width: 300, height: 300 }} />\n        </Modal>\n        <Container>\n          <Row>\n            <Col className=\"gutter-row\" span={6}>\n              <Card\n                onClick={() =>\n                  this.setState({ isModalVisibleCreateProduct: true })\n                }\n                hoverable\n                style={{ width: 250, height: 300, margin: \"20px\" }}\n                bodyStyle={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n              >\n                <BsPlusCircle\n                  style={{ width: \"60%\", height: \"60%\", opacity: 0.5 }}\n                />\n              </Card>\n            </Col>\n\n            {this.props.storeProducts.length\n              ? this.props.storeProducts.map((item: any, index: any) => {\n                  return (\n                    <Col className=\"gutter-row\" span={6} key={item._id}>\n                      <Card\n                        hoverable\n                        bodyStyle={{\n                          textAlign: \"center\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                        actions={[\n                          <SettingOutlined\n                            key=\"setting\"\n                            onClick={() =>\n                              this.setState({\n                                currectId: item._id,\n                                isModalVisibleRedactProduct: true,\n                              })\n                            }\n                          />,\n                          <ShoppingCartOutlined key=\"cart\" />,\n                        ]}\n                        style={{\n                          width: 250,\n                          height: 300,\n                          margin: \"20px\",\n                          display: \"grid\",\n                          gridTemplateRows: \"auto 1fr auto\",\n                          gridTemplateColumns: \"100%\",\n                        }}\n                        cover={\n                          <img\n                            style={{ width: \"100%\", height: 185 }}\n                            alt=\"example\"\n                            src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                          />\n                        }\n                      >\n                        <Meta description={item.name} />\n                      </Card>\n                    </Col>\n                  );\n                })\n              : null}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    imageUrl: state.currectInput.imageUrl,\n    nameProduct: state.currectInput.nameProduct,\n    descriprionProduct: state.currectInput.descriprionProduct,\n    storeProducts: state?.storeProducts,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  inputReducer,\n  RedactProductsFetchServerAC,\n  AddNewProductServerAC,\n  SetProductsFetchServerAC,\n  DeleteProductsFetchServerAC,\n})(Store);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/index.page.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Profile.page.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Admin.page.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/NavBar.page.tsx",["87","88"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu } from \"antd\";\nimport { ShopOutlined, HomeOutlined } from \"@ant-design/icons\";\nimport { Drawer, Space, Input, Button } from \"antd\";\nimport {\n  inputReducer,\n  AuthFetchServerAC,\n  RegFetchServerAC,\n} from \"../state/auth.reducer\";\nimport { EyeTwoTone, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { BsPeople } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { RiAdminLine } from \"react-icons/ri\";\nimport { GiShoppingCart } from \"react-icons/gi\";\n\nclass NavBar extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    current: \"main\",\n    setVisible: false,\n  };\n\n  changeHandler = (event: any) => {\n    return { value: event.target.value, name: event.target.name };\n  };\n  handleClick = (e: any) => {\n    console.log(\"click \", e);\n    this.setState({ current: e.key });\n  };\n\n  showDrawer = () => {\n    this.setState({ setVisible: true });\n  };\n  onClose = () => {\n    this.setState({ setVisible: false });\n  };\n\n  render() {\n    const { current } = this.state;\n    let AuthButton;\n    let AdminButton;\n\n    if (!this.props.loggin) {\n      AuthButton = (\n        <Menu.Item\n          key=\"Auth\"\n          onClick={this.showDrawer}\n          icon={<BsPeople />}\n          style={{ flexGrow: 1, textAlign: \"center\" }}\n        >\n          Auth\n        </Menu.Item>\n      );\n    } else {\n      if (this.props.role == \"user\")\n        AdminButton = (\n          <Menu.Item\n            key=\"Admin\"\n            icon={<RiAdminLine />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/admin\">Admin</Link>\n          </Menu.Item>\n        );\n\n      AuthButton = (\n        <Menu.Item\n          key=\"Profile\"\n          icon={<CgProfile />}\n          style={{ flexGrow: 1, textAlign: \"center\" }}\n        >\n          <Link to=\"/profile\">Profile</Link>\n        </Menu.Item>\n      );\n    }\n    return (\n      <>\n        <Menu\n          onClick={this.handleClick}\n          selectedKeys={[current]}\n          mode=\"horizontal\"\n          style={{ justifyContent: \"space-between\", display: \"flex\" }}\n        >\n          <Menu.Item\n            key=\"main\"\n            icon={<HomeOutlined />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/\">Main</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"cart\"\n            icon={<GiShoppingCart />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/cart\">Cart</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"Store\"\n            icon={<ShopOutlined />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/store\">Store</Link>\n          </Menu.Item>\n          {AuthButton}\n          {AdminButton}\n        </Menu>\n\n        <Drawer\n          title=\"Authoriz\"\n          placement=\"right\"\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.setVisible}\n        >\n          <Space direction=\"vertical\">\n            <Input\n              placeholder=\"input email\"\n              name=\"email\"\n              onChange={(e: any) =>\n                this.props.inputReducer(this.changeHandler(e))\n              }\n            />\n\n            <Input.Password\n              placeholder=\"input password\"\n              name=\"password\"\n              onChange={(e: any) =>\n                this.props.inputReducer(this.changeHandler(e))\n              }\n              iconRender={(visible) =>\n                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n              }\n            />\n            <Space direction=\"horizontal\">\n              <Button\n                onClick={() =>\n                  this.props.AuthFetchServerAC({\n                    email: this.props.email,\n                    password: this.props.password,\n                  })\n                }\n              >\n                Auth me!\n              </Button>\n              <Button\n                onClick={() =>\n                  this.props.RegFetchServerAC({\n                    email: this.props.email,\n                    password: this.props.password,\n                  })\n                }\n              >\n                Reg me!\n              </Button>\n            </Space>\n          </Space>\n        </Drawer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    role: state.data.role,\n    loggin: state.loggin,\n    email: state.currectInput.email,\n    password: state.currectInput.password,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  AuthFetchServerAC,\n  RegFetchServerAC,\n  inputReducer,\n})(NavBar);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/index.saga.ts",[],{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":17,"column":3,"nodeType":"95","messageId":"96","endLine":19,"endColumn":4},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"93","severity":1,"message":"94","line":68,"column":3,"nodeType":"95","messageId":"96","endLine":70,"endColumn":4},{"ruleId":"89","severity":1,"message":"101","line":105,"column":11,"nodeType":"91","messageId":"92","endLine":105,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":142,"column":11,"nodeType":"104","endLine":142,"endColumn":80},{"ruleId":"102","severity":1,"message":"103","line":188,"column":11,"nodeType":"104","endLine":188,"endColumn":80},{"ruleId":"93","severity":1,"message":"94","line":19,"column":3,"nodeType":"95","messageId":"96","endLine":21,"endColumn":4},{"ruleId":"105","severity":1,"message":"106","line":59,"column":27,"nodeType":"107","messageId":"108","endLine":59,"endColumn":29},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'uploadButton' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]