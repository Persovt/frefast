[{"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/NavBar.page.tsx":"1","/Users/ilamitin/Documents/project/site213/frefast/client/src/App.tsx":"2","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/state.ts":"3","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/auth.saga.ts":"4","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/navbar.reducer.ts":"5","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/store.saga.ts":"6","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/store.reducer.ts":"7","/Users/ilamitin/Documents/project/site213/frefast/client/src/index.tsx":"8","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Admin.page.tsx":"9","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/index.page.ts":"10","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Cart.page.tsx":"11","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Profile.page.tsx":"12","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Main.page.tsx":"13","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/cart.reducer.ts":"14","/Users/ilamitin/Documents/project/site213/frefast/client/src/reportWebVitals.ts":"15","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/auth.reducer.ts":"16","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/index.saga.ts":"17","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/site.saga.ts":"18","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/site.reducer.ts":"19","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/order.saga.ts":"20","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/order.reducer.ts":"21","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Product.page.tsx":"22","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store/index.tsx":"23","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store/CreateProduct.tsx":"24","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store/RedactProduct.tsx":"25"},{"size":4769,"mtime":1612109152034,"results":"26","hashOfConfig":"27"},{"size":4589,"mtime":1612349671396,"results":"28","hashOfConfig":"27"},{"size":690,"mtime":1612251554705,"results":"29","hashOfConfig":"27"},{"size":1909,"mtime":1612603371935,"results":"30","hashOfConfig":"27"},{"size":700,"mtime":1611859268824,"results":"31","hashOfConfig":"27"},{"size":2464,"mtime":1612603544300,"results":"32","hashOfConfig":"27"},{"size":2370,"mtime":1612350032249,"results":"33","hashOfConfig":"27"},{"size":574,"mtime":1611816497591,"results":"34","hashOfConfig":"27"},{"size":3546,"mtime":1612335778318,"results":"35","hashOfConfig":"27"},{"size":304,"mtime":1612118525035,"results":"36","hashOfConfig":"27"},{"size":4365,"mtime":1612202291010,"results":"37","hashOfConfig":"27"},{"size":2450,"mtime":1612335916405,"results":"38","hashOfConfig":"27"},{"size":722,"mtime":1612334976663,"results":"39","hashOfConfig":"27"},{"size":1109,"mtime":1612197371596,"results":"40","hashOfConfig":"27"},{"size":425,"mtime":1611410765550,"results":"41","hashOfConfig":"27"},{"size":983,"mtime":1611849511398,"results":"42","hashOfConfig":"27"},{"size":1248,"mtime":1612250607282,"results":"43","hashOfConfig":"27"},{"size":756,"mtime":1612603532938,"results":"44","hashOfConfig":"27"},{"size":730,"mtime":1612094866197,"results":"45","hashOfConfig":"27"},{"size":1286,"mtime":1612603527708,"results":"46","hashOfConfig":"27"},{"size":618,"mtime":1612251690460,"results":"47","hashOfConfig":"27"},{"size":702,"mtime":1612116448186,"results":"48","hashOfConfig":"27"},{"size":11504,"mtime":1612350633355,"results":"49","hashOfConfig":"27"},{"size":4580,"mtime":1612177256612,"results":"50","hashOfConfig":"27"},{"size":3115,"mtime":1612121181729,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"16xow5r",{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"109"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/NavBar.page.tsx",["120"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Menu } from \"antd\";\nimport { ShopOutlined, HomeOutlined } from \"@ant-design/icons\";\nimport { Drawer, Space, Input, Button } from \"antd\";\nimport {\n  AuthInputAC,\n  AuthLoginFetchServerAc,\n  AuthRegFetchServerAc,\n} from \"../state/reducer/auth.reducer\";\nimport { NavBarChangeVisibleAuthSideBarAC } from \"../state/reducer/navbar.reducer\";\nimport { EyeTwoTone, EyeInvisibleOutlined } from \"@ant-design/icons\";\nimport { CgProfile } from \"react-icons/cg\";\nimport { BsPeople } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport { RiAdminLine } from \"react-icons/ri\";\nimport { GiShoppingCart } from \"react-icons/gi\";\n\nclass NavBar extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  changeHandler = (event: any) => {\n    return { value: event.target.value, name: event.target.name };\n  };\n\n  render() {\n    return (\n      <>\n        <Menu\n          onClick={() => this.forceUpdate()}\n          selectedKeys={[window.location.pathname]}\n          mode=\"horizontal\"\n          style={{ justifyContent: \"space-between\", display: \"flex\" }}\n        >\n          <Menu.Item\n            key=\"/main\"\n            icon={<HomeOutlined />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/main\">Main</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"/cart\"\n            icon={<GiShoppingCart />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/cart\">Cart</Link>\n          </Menu.Item>\n          <Menu.Item\n            key=\"/store\"\n            icon={<ShopOutlined />}\n            style={{ flexGrow: 1, textAlign: \"center\" }}\n          >\n            <Link to=\"/store\">Store</Link>\n          </Menu.Item>\n\n          {this.props.role ? (\n            <Menu.Item\n              key=\"/Profile\"\n              icon={<CgProfile />}\n              style={{ flexGrow: 1, textAlign: \"center\" }}\n            >\n              <Link to=\"/profile\">Profile</Link>\n            </Menu.Item>\n          ) : (\n            <Menu.Item\n              key=\"/Auth\"\n              onClick={() => this.props.NavBarChangeVisibleAuthSideBarAC(true)}\n              icon={<BsPeople />}\n              style={{ flexGrow: 1, textAlign: \"center\" }}\n            >\n              Auth\n            </Menu.Item>\n          )}\n          {this.props.role === \"admin\" ? (\n            <Menu.Item\n              key=\"/Admin\"\n              icon={<RiAdminLine />}\n              style={{ flexGrow: 1, textAlign: \"center\" }}\n            >\n              <Link to=\"/admin\">Admin</Link>\n            </Menu.Item>\n          ) : null}\n        </Menu>\n\n        <Drawer\n          title=\"Authoriz\"\n          placement=\"right\"\n          closable={false}\n          onClose={() => this.props.NavBarChangeVisibleAuthSideBarAC(false)}\n          visible={this.props.loggin ? false : this.props.visibleAuthSideBar}\n        >\n          <Space direction=\"vertical\">\n            <Input\n              placeholder=\"input email\"\n              name=\"email\"\n              onChange={(e: any) =>\n                this.props.AuthInputAC(this.changeHandler(e))\n              }\n            />\n\n            <Input.Password\n              placeholder=\"input password\"\n              name=\"password\"\n              onChange={(e: any) =>\n                this.props.AuthInputAC(this.changeHandler(e))\n              }\n              iconRender={(visible) =>\n                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n              }\n            />\n            <Space direction=\"horizontal\">\n              <Button\n                onClick={() =>\n                  this.props.AuthLoginFetchServerAc({\n                    email: this.props.email,\n                    password: this.props.password,\n                  })\n                }\n              >\n                Auth me!\n              </Button>\n              <Button\n                onClick={() =>\n                  this.props.AuthRegFetchServerAc({\n                    email: this.props.email,\n                    password: this.props.password,\n                  })\n                }\n              >\n                Reg me!\n              </Button>\n            </Space>\n          </Space>\n        </Drawer>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    visibleAuthSideBar: state.navbarReducer.visibleAuthSideBar,\n    role: state.authReducer.data.role,\n    loggin: state.authReducer.loggin,\n    email: state.authReducer.currectInput.email,\n    password: state.authReducer.currectInput.password,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  NavBarChangeVisibleAuthSideBarAC,\n  AuthLoginFetchServerAc,\n  AuthInputAC,\n  AuthRegFetchServerAc,\n})(NavBar);\n",["121","122"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/App.tsx",["123","124","125","126"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AuthValidateTokenFetchServerAc,AuthInputAC } from \"./state/reducer/auth.reducer\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport {SiteCheackFetchServerAC} from './state/reducer/site.reducer'\nimport { Main, Cart, Store, Profile, NavBar, Admin,ProductPage } from \"./pages/index.page\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst { Header, Content, Footer, Sider } = Layout;\n\nclass App extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  componentDidMount() {\n    \n   \n    this.props.SiteCheackFetchServerAC(window.location.host.split('.')[1] ? window.location.host.split('.')[0] : 'frefast')\n\n  // this.props.AuthInputAC({ value: window.location.host.split('.')[1] ? window.location.host.split('.')[0] : 'frefast', name: 'siteName' })\n    //cookies.set('siteName')\n   this.props.AuthValidateTokenFetchServerAc();\n  }\n\n  componentDidUpdate() {\n  \n    this.props.SiteCheackFetchServerAC(window.location.host.split('.')[1] ? window.location.host.split('.')[0] : 'frefast')\n\n\n    //this.props.AuthInputAC({ value: window.location.host.split('.')[1] ? window.location.host.split('.')[0] : 'frefast', name: 'siteName' })\n    if (this.props.accesToken)\n      setInterval(() => {\n        this.props.AuthValidateTokenFetchServerAc();\n      }, 100000);\n  }\n\n  render() {\n   // console.log(window.location.host.split('.')[1] ? window.location.host.split('.')[0] : '/')\n    let router; //Лучше уйди и не трогай нахуй обьет\n    switch (this.props.role) {\n      case \"user\":\n        router = (\n          <Switch>\n            <Route path=\"/main\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/cart\" exact>\n              <Cart />\n            </Route>\n            <Route path=\"/store\" exact>\n              <Store />\n            </Route>\n            <Route path=\"/profile\" exact>\n              <Profile />\n            </Route>\n            <Route path=\"/productpage\" exact>\n              <ProductPage />\n            </Route>\n            <Redirect to=\"/main\" />\n          </Switch>\n        );\n        break;\n      case \"admin\":\n        router = (\n          <Switch>\n            <Route path=\"/main\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/cart\" exact>\n              <Cart />\n            </Route>\n            <Route path=\"/store\" exact>\n              <Store />\n            </Route>\n            <Route path=\"/profile\" exact>\n              <Profile />\n            </Route>\n            <Route path=\"/admin\" exact>\n              <Admin />\n            </Route>\n            <Route path=\"/productpage\" exact>\n              <ProductPage />\n            </Route>\n            \n            <Redirect to=\"/main\" />\n          </Switch>\n        );\n        break;\n\n      default:\n        router = (\n          <Switch>\n            <Route path=\"/main\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/cart\" exact>\n              <Cart />\n            </Route>\n            <Route path=\"/store\" exact>\n              <Store />\n            </Route>\n\n            <Redirect to=\"/main\" />\n          </Switch>\n        );\n    }\n\n    return (\n      <>\n        <Router>\n          <Header style={{backgroundColor: 'white'}}>\n            <NavBar />\n          </Header>\n          <Content style={{ padding: \"0 50px\" }}>\n          \n            <Layout\n              className=\"site-layout-background\"\n              style={{ padding: \"24px 0\" }}\n            >\n               {/* <Sider className=\"site-layout-background\" style={{backgroundColor: 'black'}} width={200}>\n              Реклама\n            </Sider> */}\n            <Content style={{ padding: '0 24px', minHeight: 280 }}> \n           \n            {router}\n            </Content>\n             \n            </Layout>\n          </Content>\n          <Footer style={{ textAlign: \"center\",backgroundColor: 'white' }}>\n           frefast.com ©2021 \n          </Footer>\n        </Router>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    role: state.authReducer.data.role,\n    loggin: state.authReducer.loggin,\n    accesToken: cookies.get(\"accesToken\"),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  AuthValidateTokenFetchServerAc,\n  AuthInputAC,\n  SiteCheackFetchServerAC\n})(App);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/state.ts",["127"],"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport authReducer from \"./reducer/auth.reducer\";\nimport cartReducer from \"./reducer/cart.reducer\";\nimport storeReducer from \"./reducer/store.reducer\";\nimport navbarReducer from \"./reducer/navbar.reducer\";\nimport orderReducer from \"./reducer/order.reducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"../sagas/index.saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    authReducer,\n    cartReducer,\n    storeReducer,\n    navbarReducer,\n    orderReducer,\n  },\n  middleware: [sagaMiddleware],\n});\n\nsagaMiddleware.run(mySaga);\n\nexport default store;\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/auth.saga.ts",[],["128","129"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/navbar.reducer.ts",[],["130","131"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/store.saga.ts",["132","133"],"import {\n  StoreSetProductAC,\n  StoreInputAC,\n} from \"../state/reducer/store.reducer\";\nimport { put } from \"redux-saga/effects\";\nconst axios = require(\"axios\").default;\n\nfunction toBase64(arr: any) {\n  //arr = new Uint8Array(arr) if it's an ArrayBuffer\n  return btoa(\n     arr.reduce((data: any, byte: any) => data + String.fromCharCode(byte), '')\n  );\n}\n\nfunction* uploadImageToServer(action: any) {\n  try {\n    const uploadImage = yield fetch(action).then((r: any) => r.blob());\n    const formData = new FormData();\n    formData.append(\"file\", uploadImage);\n   \n\n    const res = yield axios({\n      method: \"post\",\n      url: \"/store/createTimeFile\",\n      data: formData,\n\n      headers: { \"Content-Type\": `multipart/form-data` },\n    });\n\n   return res.data\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n}\n\nfunction* AddNewProduct(action: any) {\n  try {\n    //const uploadImage = yield fetch(action.payload.uploadImage).then((r: any) => r.blob());\n    console.log(action.payload)\n    const { amountProduct,descriprionProduct,nameProduct,uploadImage,priceProduct,typeProduct } = action.payload\n   // console.log(amountProduct,descriprionProduct)\n  //  const IdUploadFile = yield uploadImageToServer(uploadImage);\n    //console.log(IdUploadFile)\n     yield axios({\n        method: 'post',\n        url: \"/store/addNewProduct\",\n        data: {\n          TimeImageId: yield uploadImageToServer(uploadImage),\n          descriprionProduct,\n          nameProduct,\n          amountProduct,\n          priceProduct,\n          typeProduct\n        },\n\n        })\n    //console.log(yield uploadImage(action.payload.uploadImage))\n\n    yield LoadProduct();\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n}\n\nfunction* DeleteProduct(action: any) {\n  try {\n    yield axios.post(\"/api/store/deleteProduct\", { id: action.payload.currectId });\n\n    yield LoadProduct();\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n}\n\nfunction* LoadProduct() {\n  try {\n    const res = yield axios.get(\"/api/store/LoadProduct\");\n\n    yield put(StoreSetProductAC(res.data));\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n}\n\nfunction* RedactProduct(action: any) {\n  try {\n    yield axios.post(\"/api/store/redactProduct\", action.payload);\n\n    yield LoadProduct();\n  } catch (error) {\n    console.log(error.response.data.message);\n  }\n}\n\nexport { AddNewProduct, LoadProduct, DeleteProduct, RedactProduct };\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/store.reducer.ts",[],["134","135"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/index.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Admin.page.tsx",["136"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, message, Avatar, Collapse } from \"antd\";\nimport { Container } from \"react-bootstrap\";\nimport { OrderLoadFetchServerAC } from \"../state/reducer/order.reducer\";\n\nconst { Panel } = Collapse;\nclass Admin extends React.Component<any, any> {\n  componentDidMount() {\n    this.props.OrderLoadFetchServerAC();\n  }\n  handleInfiniteOnLoad = () => {\n    let { data } = this.state;\n    this.setState({\n      loading: true,\n    });\n    if (data.length > 14) {\n      message.warning(\"Infinite List loaded all\");\n      this.setState({\n        hasMore: false,\n        loading: false,\n      });\n      return;\n    }\n  };\n  callback(key: any) {\n    console.log(key);\n  }\n  render() {\n    console.log(this.props.order);\n    return (\n      <>\n        <Container>\n          <div className=\"demo-infinite-container\">\n            <h4>Заказы:</h4>\n            <Collapse defaultActiveKey={[\"0\"]} onChange={this.callback}>\n              {this.props.order.map((item: any, index: number) => {\n                return (\n                  <Panel header={item._id + \"  Status:  \" + item.status} key={index}>\n                    <p className=\"\">Adres: {item.data.adres} </p>\n                    <p className=\"\">City: {item.data.city} </p>\n                    <p className=\"\">Index: {item.data.index} </p>\n                    <p className=\"\">Street: {item.data.street} </p>\n                   \n                    <h5>Товары:</h5>\n                    \n                      <List\n                        dataSource={item.products}\n                        renderItem={(item: any) => (\n                          <List.Item key={item._id}>\n                            <List.Item.Meta\n                              avatar={\n                                <Avatar src={item.img} />\n                              }\n                              title={<a href=\"#\">{item.name}</a>}\n                              description={item.description}\n                            />\n                            <p className=\"\">Price: {item.price ? item.price : 'free'} </p>\n                            <p className=\"\">Amount: {item.amount} </p>\n          \n                          </List.Item>\n                        )}\n                      ></List>\n                    \n                  </Panel>\n                );\n              })}\n            </Collapse>\n\n            {/* <List\n              dataSource={this.props.order}\n              renderItem={(item: any) => (\n                <List.Item key={item._id}>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n                    }\n                    title={<a href=\"https://ant.design\">{}</a>}\n                    //description={item.name}\n                  />\n                  <p className=\"\">Adres: {item.data.adres} </p>\n                  <p className=\"\">City: {item.data.city} </p>\n                  <p className=\"\">Index: {item.data.index} </p>\n                  <p className=\"\">Street: {item.data.street} </p>\n                  <p className=\"\">Status: {item.status} </p>\n                </List.Item>\n              )}\n            ></List> */}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    data: state.authReducer.data,\n    order: state.orderReducer?.orders,\n    \n  };\n};\n\nexport default connect(mapStateToProps, {\n  OrderLoadFetchServerAC,\n})(Admin);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/index.page.ts",[],["137","138"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Cart.page.tsx",["139"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { List, Avatar, Divider, Button, Modal, Input } from \"antd\";\nimport { SiteAddFetchServerAC } from \"../state/reducer/site.reducer\";\nimport { OrderAddFetchServerAC } from \"../state/reducer/order.reducer\";\nimport {\n  CartOpenConfirmModelAC,\n  CartInputAC,\n} from \"../state/reducer/cart.reducer\";\nclass Cart extends React.Component<any, any> {\n  changeHandler = (event: any) => {\n    return { value: event.target.value, name: event.target.name };\n  };\n\n  render() {\n    return (\n      <>\n        <Modal\n          title=\"Confirm order\"\n          visible={this.props.visibleConfirmModel}\n          onOk={() => {\n            this.props.OrderAddFetchServerAC({\n              siteName: this.props.siteName,\n              adres: this.props.adres,\n              city: this.props.city,\n              street: this.props.street,\n              index: this.props.index,\n              userId: this.props.userId,\n              products: this.props.cartProducts\n            });\n            this.props.CartOpenConfirmModelAC(false);\n          }}\n          onCancel={() => this.props.CartOpenConfirmModelAC(false)}\n        >\n          {this.props.cartTypes.find((element: any) => element === \"site\") ? (\n            <>\n              <Divider orientation=\"left\">Site settings</Divider>\n              <Input\n                placeholder=\"siteName\"\n                name=\"siteName\"\n                onChange={(e: any) =>\n                  this.props.CartInputAC(this.changeHandler(e))\n                }\n              />\n            </>\n          ) : null}\n          {this.props.cartTypes.find(\n            (element: any) => element === \"product\"\n          ) ? (\n            <>\n              <Divider orientation=\"left\">Delivery settings</Divider>\n              <Input\n                placeholder=\"Adres\"\n                name=\"adres\"\n                onChange={(e: any) =>\n                  this.props.CartInputAC(this.changeHandler(e))\n                }\n              />\n              <Input\n                placeholder=\"Street\"\n                name=\"street\"\n                onChange={(e: any) =>\n                  this.props.CartInputAC(this.changeHandler(e))\n                }\n              />\n              <Input\n                placeholder=\"City\"\n                name=\"city\"\n                onChange={(e: any) =>\n                  this.props.CartInputAC(this.changeHandler(e))\n                }\n              />\n              <Input\n                placeholder=\"index\"\n                name=\"index\"\n                onChange={(e: any) =>\n                  this.props.CartInputAC(this.changeHandler(e))\n                }\n              />\n            </>\n          ) : null}\n        </Modal>\n\n        <Container>\n          <Divider orientation=\"left\">Карзина</Divider>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={this.props.cartProducts}\n            renderItem={(item: any) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={<Avatar src={item.img} />}\n                  title={<a>{item.name}</a>}\n                  description={item.description}\n                />\n              </List.Item>\n            )}\n          />\n          <Button\n            disabled={!this.props.cartProducts.length}\n            type=\"primary\"\n            onClick={() => this.props.CartOpenConfirmModelAC(true)}\n          >\n            Confirm\n          </Button>\n          {/* <Button type=\"primary\" onClick={( ) => {\n            this.props.SiteAddFetchServerAC({siteName: 'frefast'})\n          }}>Add site</Button> */}\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    cartProducts: state.cartReducer.cartProducts,\n    visibleConfirmModel: state.cartReducer.visibleConfirmModel,\n    cartTypes: state.cartReducer.cartTypes,\n    siteName: state.cartReducer.currectInput.siteName,\n    adres: state.cartReducer.currectInput.adres,\n    city: state.cartReducer.currectInput.city,\n    street: state.cartReducer.currectInput.street,\n    index: state.cartReducer.currectInput.index,\n    userId: state.authReducer.data.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  CartInputAC,\n  SiteAddFetchServerAC,\n  OrderAddFetchServerAC,\n  CartOpenConfirmModelAC,\n})(Cart);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Profile.page.tsx",["140","141","142"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { List, Typography, Divider } from \"antd\";\nimport { Avatar, Collapse } from \"antd\";\nimport { OrderLoadFetchServerAC } from \"../state/reducer/order.reducer\";\n\nconst { Panel } = Collapse;\nclass Profile extends React.Component<any, any> {\n  componentDidMount() {\n    this.props.OrderLoadFetchServerAC();\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <p>Email: {this.props.data.email}</p>\n          <p>Id: {this.props.data.userId}</p>\n          <p>Role: {this.props.data.role}</p>\n\n          <Divider orientation=\"left\">Зыказы:</Divider>\n          <Collapse defaultActiveKey={[\"0\"]}>\n            {this.props.order.map((item: any, index: number) => {\n              console.log(item)\n              if (item.userId === this.props.data.userId)\n                return (\n                  <Panel\n                    header={item._id + \"  Status:  \" + item.status}\n                    key={index}\n                  >\n                    <p className=\"\">Adres: {item.data.adres} </p>\n                    <p className=\"\">City: {item.data.city} </p>\n                    <p className=\"\">Index: {item.data.index} </p>\n                    <p className=\"\">Street: {item.data.street} </p>\n\n                    <h5>Товары:</h5>\n\n                    <List\n                      dataSource={item.products}\n                      renderItem={(item: any) => (\n                        <List.Item key={item._id}>\n                          <List.Item.Meta\n                            avatar={<Avatar src={item.img} />}\n                            title={<a href=\"#\">{item.name}</a>}\n                            description={item.description}\n                          />\n                          <p className=\"\">\n                            Price: {item.price ? item.price : \"free\"}{\" \"}\n                          </p>\n                          <p className=\"\">Amount: {item.amount} </p>\n                        </List.Item>\n                      )}\n                    ></List>\n                  </Panel>\n                );\n            })}\n          </Collapse>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    data: state.authReducer.data,\n    order: state.orderReducer?.orders,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  OrderLoadFetchServerAC,\n})(Profile);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Main.page.tsx",["143","144","145","146","147","148"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { Row, Col, Image } from \"antd\";\n\nclass MainPage extends React.Component {\n  render() {\n    console.log(window.innerWidth);\n    return (\n      <>\n        <div\n          className=\"\"\n          style={{\n            backgroundImage:\n              \"url(\" + \"https://i.postimg.cc/tRx6Swj0/FREFAST.jpg\" + \")\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n           \n            height: window.innerWidth / 4,\n          }}\n        ></div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {})(MainPage);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/cart.reducer.ts",["149"],"import { ConsoleSqlOutlined } from \"@ant-design/icons\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState: any = {\n  cartProducts: [],\n  currectInput: {},\n  visibleConfirmModel: false,\n  cartTypes: [],\n};\n\nconst productReleases = createSlice({\n  name: \"Cart\",\n  initialState,\n  reducers: {\n    CartInputAC: (state, action) => {\n      state.currectInput[action.payload.name] = action.payload.value;\n      console.log(action.payload, state);\n    },\n    CartAddProductAC: (state, action) => {\n    \n     state.cartTypes = Array.from(new Set([...state.cartTypes, action.payload.typeProduct]))\n      state.cartProducts =  [...state.cartProducts, action.payload]\n    },\n    CartDeleteProductAC: (state, action) => {},\n    CartChangeProductAC: (state, action) => {},\n    CartOpenConfirmModelAC: (state, action) => {\n      state.visibleConfirmModel = action.payload\n      \n    },\n  },\n});\n\nconst { actions, reducer } = productReleases;\n\nexport const {\n  CartDeleteProductAC,\n  CartAddProductAC,\n  CartChangeProductAC,\n  CartInputAC,\n  CartOpenConfirmModelAC,\n  \n} = actions;\n\nexport default reducer;\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/reportWebVitals.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/auth.reducer.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/index.saga.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/site.saga.ts",["150"],"import { put } from \"redux-saga/effects\";\nconst axios = require(\"axios\").default;\n\nfunction* cheackSite(action: any): any {\n    try {\n        \n       console.log(action.payload)\n      const res = yield axios.post(\"/api/site/cheackSite\", {siteName: action.payload});\n  \n      console.log(res.data)\n     \n    } catch (error) {\n      \n      console.log(error.response.data.message);\n    }\n  }\n  function* addSite(action: any): any {\n    try {\n        const { siteName } = action.payload\n       console.log(action.payload)\n      const res = yield axios.post(\"/api/site/addSite\", {siteName});\n  \n      console.log(res.data)\n     \n    } catch (error) {\n      \n      console.log(error.response.data.message);\n    }\n  }\n\n  export {\n    cheackSite,\n    addSite\n  };","/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/site.reducer.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/sagas/order.saga.ts",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/state/reducer/order.reducer.ts",[],["151","152"],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Product.page.tsx",["153","154"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"react-bootstrap\";\nimport { Row, Col, Image } from \"antd\";\n\nclass ProductPage extends React.Component {\n  render() {\n    return (\n      <>\n       \n          <Row>\n            <Col span={24}>\n              <img\n                style={{\n                  width: 795,\n                  height: 200,\n                }}\n                src=\"https://i.postimg.cc/tRx6Swj0/FREFAST.jpg\"\n                alt=\"\"\n              />\n            </Col>\n          </Row>\n        \n      </>\n    );\n  }\n}\nconst mapStateToProps = (state: any) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n    \n})(ProductPage);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store/index.tsx",["155","156","157","158","159"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BsPlusCircle, BsCheck } from \"react-icons/bs\";\nimport { SettingOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport {\n  StoreHoverAddCartButtonAC,\n  StoreChangeVisibleRedactModelAC,\n  StoreChangeVisibleCreateModelAC,\n  StoreLoadProductFetchServerAC,\n  StoreSetCurrectIdAC,\n  StoreAddCartButtonAC,\n} from \"../../state/reducer/store.reducer\";\nimport \"./Store.css\";\nimport { CartAddProductAC } from \"../../state/reducer/cart.reducer\";\nimport { Card, Button, InputNumber } from \"antd\";\nimport CreateProduct from \"./CreateProduct\";\nimport RedactProduct from \"./RedactProduct\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { url } from \"inspector\";\n\nclass Store extends React.Component<any, any> {\n  componentDidMount() {\n    this.props.StoreLoadProductFetchServerAC();\n  }\n\n  changeHandler = (event: any) => {\n    return { value: event.target.value, name: event.target.name };\n  };\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <CreateProduct />\n        <RedactProduct />\n        <Container>\n          <Row>\n            <Col className=\"gutter-row\" md={4}>\n              <Card\n                onClick={() => this.props.StoreChangeVisibleCreateModelAC(true)}\n                hoverable\n                style={{ width: 250, height: 300, margin: \"20px\" }}\n                bodyStyle={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n              >\n                <BsPlusCircle\n                  style={{ width: \"60%\", height: \"60%\", opacity: 0.5 }}\n                />\n              </Card>\n            </Col>\n\n            {this.props.storeProducts?.length\n              ? this.props.storeProducts.map((item: any, index: any) => {\n                  let cartVisible;\n                  return (\n                    <Col className=\"gutter-row\" key={item._id} md={4}>\n                      {/* <div className=\"Card\">\n                        <div className=\"Card-img\">\n                          <img src={item.img} alt=\"\" />\n                        </div>\n                        <div className=\"Card-body\">\n                          <div className=\"Card-name\">{item.name}</div>\n                          <div className=\"Card-amount\">{item.amount}</div>\n                        </div>\n                        <div className=\"Card-footer\">\n                          <SettingOutlined\n                            key=\"setting\"\n                            onClick={() => {\n                              this.props.StoreChangeVisibleRedactModelAC(true);\n                              this.props.StoreSetCurrectIdAC(item._id);\n                            }}\n                          />\n                          <ShoppingCartOutlined\n                            key=\"cart\"\n                            onClick={() => {\n                              // this.props.CartAddProductAC(item);\n                              //console.log(item)\n                            }}\n                          />\n                        </div>\n                      </div> */}\n\n                      <Card\n                        hoverable\n                        onMouseOver={() =>\n                          this.props.StoreHoverAddCartButtonAC({\n                            id: index,\n                            value: true,\n                          })\n                        }\n                        onMouseOut={() =>\n                          this.props.StoreHoverAddCartButtonAC({\n                            id: index,\n                            value: false,\n                          })\n                        }\n                        bodyStyle={{\n                          display: \"grid\",\n                          gridTemplateRows: \"auto 1fr 1fr\",\n                          gridTemplateColumns: \"100%\",\n\n                          padding: 0,\n                        }}\n                        actions={\n                          [\n                            // <div\n                            //   className=\"\"\n                            //   onClick={() => {}}\n                            //   onMouseEnter={() => {}}\n                            //   onMouseLeave={() => {}}\n                            // >\n                            //   {this.props.cartProducts.filter(\n                            //     (i: any) => i._id === item._id\n                            //   ).length ? (\n                            //     // <ShoppingCartOutlined\n                            //     //   key=\"cart\"\n                            //     //   onClick={() => {\n                            //     //     this.props.CartAddProductAC(item);\n                            //     //     console.log(item);\n                            //     //   }}\n                            //     // />\n                            //     <>\n                            //       <Button>+</Button>\n                            //       <Button>-</Button>\n                            //     </>\n                            //   ) : (\n                            //     <div\n                            //       onMouseOver={() =>\n                            //         this.props.StoreHoverAddCartButtonAC(true)\n                            //       }\n                            //       onMouseOut={() =>\n                            //         this.props.StoreHoverAddCartButtonAC(false)\n                            //       }\n                            //       className=\"\"\n                            //     >\n                            //       <Link\n                            //         to=\"/productpage\"\n                            //         onClick={() =>\n                            //           this.props.StoreSetCurrectIdAC(item._id)\n                            //         }\n                            //       >\n                            //         <ShoppingCartOutlined key=\"cart\" />\n                            //       </Link>\n                            //     </div>\n                            //   )}\n                            // </div>,\n                          ]\n                        }\n                        style={{\n                          width: 250,\n                          minHeight: 300,\n                          margin: \"20px\",\n                          display: \"grid\",\n                          gridTemplateRows: \"auto 1fr auto\",\n                          gridTemplateColumns: \"100%\",\n                          border: \"1px solid silver\",\n                        }}\n                        cover={\n                          <div\n                            className=\"card-image\"\n                            style={{\n                              width: 240,\n                              height: 240,\n                              margin: \"5px\",\n                              backgroundImage: \"url(\" + item.img + \")\",\n                              backgroundSize: \"cover\",\n                              backgroundPosition: \"center\",\n                            }}\n                          ></div>\n                        }\n                      >\n                        <SettingOutlined\n                          className=\"setting-icon\"\n                          key=\"setting\"\n                          onClick={() => {\n                            this.props.StoreChangeVisibleRedactModelAC(true);\n                            this.props.StoreSetCurrectIdAC(item._id);\n                          }}\n                        />\n                        <p className=\"card__body-name card__body-text\">\n                          {item.name}\n                        </p>\n\n                        {!item.inCart ? (\n                          !item.visibleCart ? (\n                            <div className=\"\">\n                              <p className=\"card__body-price card__body-text\">\n                                {item.price ? `${item.price} ₽` : \"FREE\"}\n                              </p>\n                              <p className=\"card__body-amount card__body-text\">\n                                Осталось: {item.amount}\n                              </p>\n                            </div>\n                          ) : (\n                            <Button\n                              disabled={item.amount === 0}\n                              style={{ height: 54, width: \"100%\" }}\n                              onClick={() => {\n                                this.props.StoreAddCartButtonAC({\n                                  id: index,\n                                  value: true,\n                                });\n                                this.props.CartAddProductAC(item);\n                              }}\n                              className=\"card-price card__body-text\"\n                            >\n                              <ShoppingCartOutlined key=\"cart\" />\n                            </Button>\n                          )\n                        ) : (\n                          <Button\n                            disabled={true}\n                            style={{ height: 54, width: \"100%\" }}\n                            className=\"card-price card__body-text\"\n                          >\n                            <BsCheck />\n                          </Button>\n                        )}\n\n                        {/* <Row>\n                          <Col\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                            }}\n                          >\n                            <div className=\"card__body-name card__body-text\">\n                              {item.name}\n                            </div>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col\n                            style={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Button\n                              disabled={item.amount===0}\n                              style={{ height: \"100%\", width: \"100%\" }}\n                              onClick={() => this.props.CartAddProductAC(item)}\n                              className=\"card-price card__body-text\"\n                            >\n\n                              {item.price ? `${item.price} ₽` : 'FREE'}\n                            </Button>\n                          </Col>\n                        </Row> */}\n\n                        {/* <Meta description={item.name} /> */}\n                      </Card>\n                    </Col>\n                  );\n                })\n              : null}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    storeProducts: state.storeReducer?.storeProducts,\n    cartProducts: state.cartReducer?.cartProducts,\n    hoverAddCartButton: state.storeReducer.hoverAddCartButton,\n    inCart: state.storeReducer?.inCart,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  StoreHoverAddCartButtonAC,\n  CartAddProductAC,\n  StoreSetCurrectIdAC,\n  StoreChangeVisibleRedactModelAC,\n  StoreChangeVisibleCreateModelAC,\n  StoreAddCartButtonAC,\n  StoreLoadProductFetchServerAC,\n})(Store);\n","/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store/CreateProduct.tsx",[],"/Users/ilamitin/Documents/project/site213/frefast/client/src/pages/Store/RedactProduct.tsx",[],{"ruleId":"160","severity":1,"message":"161","line":20,"column":3,"nodeType":"162","messageId":"163","endLine":22,"endColumn":4},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":4,"column":18,"nodeType":"170","messageId":"171","endLine":4,"endColumn":22},{"ruleId":"168","severity":1,"message":"172","line":4,"column":24,"nodeType":"170","messageId":"171","endLine":4,"endColumn":34},{"ruleId":"168","severity":1,"message":"173","line":18,"column":34,"nodeType":"170","messageId":"171","endLine":18,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":21,"column":3,"nodeType":"162","messageId":"163","endLine":23,"endColumn":4},{"ruleId":"168","severity":1,"message":"174","line":1,"column":26,"nodeType":"170","messageId":"171","endLine":1,"endColumn":41},{"ruleId":"164","replacedBy":"175"},{"ruleId":"166","replacedBy":"176"},{"ruleId":"164","replacedBy":"177"},{"ruleId":"166","replacedBy":"178"},{"ruleId":"168","severity":1,"message":"179","line":3,"column":3,"nodeType":"170","messageId":"171","endLine":3,"endColumn":15},{"ruleId":"168","severity":1,"message":"180","line":8,"column":10,"nodeType":"170","messageId":"171","endLine":8,"endColumn":18},{"ruleId":"164","replacedBy":"181"},{"ruleId":"166","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":55,"column":38,"nodeType":"185","endLine":55,"endColumn":50},{"ruleId":"164","replacedBy":"186"},{"ruleId":"166","replacedBy":"187"},{"ruleId":"183","severity":1,"message":"188","line":94,"column":26,"nodeType":"185","endLine":94,"endColumn":29},{"ruleId":"168","severity":1,"message":"189","line":4,"column":16,"nodeType":"170","messageId":"171","endLine":4,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":23,"column":62,"nodeType":"192","messageId":"193","endLine":23,"endColumn":64},{"ruleId":"183","severity":1,"message":"184","line":44,"column":36,"nodeType":"185","endLine":44,"endColumn":48},{"ruleId":"168","severity":1,"message":"194","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"195","line":4,"column":10,"nodeType":"170","messageId":"171","endLine":4,"endColumn":13},{"ruleId":"168","severity":1,"message":"196","line":4,"column":15,"nodeType":"170","messageId":"171","endLine":4,"endColumn":18},{"ruleId":"168","severity":1,"message":"197","line":4,"column":20,"nodeType":"170","messageId":"171","endLine":4,"endColumn":25},{"ruleId":"198","severity":1,"message":"199","line":15,"column":22,"nodeType":"200","messageId":"201","endLine":15,"endColumn":23},{"ruleId":"198","severity":1,"message":"199","line":15,"column":68,"nodeType":"200","messageId":"201","endLine":15,"endColumn":69},{"ruleId":"168","severity":1,"message":"202","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":28},{"ruleId":"168","severity":1,"message":"203","line":1,"column":10,"nodeType":"170","messageId":"171","endLine":1,"endColumn":13},{"ruleId":"164","replacedBy":"204"},{"ruleId":"166","replacedBy":"205"},{"ruleId":"168","severity":1,"message":"194","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"197","line":4,"column":20,"nodeType":"170","messageId":"171","endLine":4,"endColumn":25},{"ruleId":"168","severity":1,"message":"206","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"207","line":16,"column":24,"nodeType":"170","messageId":"171","endLine":16,"endColumn":35},{"ruleId":"168","severity":1,"message":"208","line":20,"column":10,"nodeType":"170","messageId":"171","endLine":20,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":31,"column":3,"nodeType":"162","messageId":"163","endLine":33,"endColumn":4},{"ruleId":"168","severity":1,"message":"209","line":63,"column":23,"nodeType":"170","messageId":"171","endLine":63,"endColumn":34},"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'Sider' is assigned a value but never used.","'combineReducers' is defined but never used.",["210"],["211"],["210"],["211"],"'StoreInputAC' is defined but never used.","'toBase64' is defined but never used.",["210"],["211"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["210"],["211"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Typography' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'ConsoleSqlOutlined' is defined but never used.","'put' is defined but never used.",["210"],["211"],"'Link' is defined but never used.","'InputNumber' is defined but never used.","'url' is defined but never used.","'cartVisible' is defined but never used.","no-global-assign","no-unsafe-negation"]